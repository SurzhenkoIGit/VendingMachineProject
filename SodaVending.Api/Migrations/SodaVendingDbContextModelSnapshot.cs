// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SodaVending.Api.Data;

#nullable disable

namespace SodaVending.Api.Migrations
{
    [DbContext(typeof(SodaVendingDbContext))]
    partial class SodaVendingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SodaVending.Api.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coca-Cola"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepsi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sprite"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fanta"
                        });
                });

            modelBuilder.Entity("SodaVending.Api.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Nominal")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nominal")
                        .IsUnique();

                    b.ToTable("Coins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nominal = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Nominal = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Nominal = 5,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 4,
                            Nominal = 10,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("SodaVending.Api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChangeAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ChangeCoins")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PaymentCoins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SodaVending.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SodaVending.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            ImageUrl = "coca-cola.png",
                            Name = "Coca-Cola Classic",
                            Price = 80,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            ImageUrl = "coca-cola-zero.png",
                            Name = "Coca-Cola Zero",
                            Price = 90,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            ImageUrl = "pepsi.png",
                            Name = "Pepsi",
                            Price = 75,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            ImageUrl = "pepsi-light.png",
                            Name = "Pepsi Light",
                            Price = 80,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            ImageUrl = "sprite.png",
                            Name = "Sprite",
                            Price = 70,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            ImageUrl = "sprite-cherry.png",
                            Name = "Sprite Cherry",
                            Price = 75,
                            Quantity = 18
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 4,
                            ImageUrl = "fanta.png",
                            Name = "Fanta Orange",
                            Price = 65,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 4,
                            ImageUrl = "fanta-lemon.png",
                            Name = "Fanta Lemon",
                            Price = 60,
                            Quantity = 22
                        });
                });

            modelBuilder.Entity("SodaVending.Api.Models.OrderItem", b =>
                {
                    b.HasOne("SodaVending.Api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SodaVending.Api.Models.Product", b =>
                {
                    b.HasOne("SodaVending.Api.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SodaVending.Api.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SodaVending.Api.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
