# SodaVending - Веб-приложение, имитирующее вендинговый автомат по продаже газированных напитков

## Описание проекта

Веб-приложение для покупки газированных напитков с возможностью фильтрации по бренду и цене.

## Технологический стек

### Backend (ASP.NET Core 8.0)
- REST Api - ASP.Net Core Web API
- Архитектурный паттерн - MVC (Model-View-Controller)
- ORM - Entity Framework Core
- БД - MS SQL Server Express
- Паттерн для доступа к данным - "Репозиторий"

### Frontend (Next.js 14)
- Фреймворк React - Next.js
- ЯП - TypeScript
- Управление состоянием - Redux Toolkit
- Tailwind CSS
- HTTP клиент для создания запросов к API - Axios

## Основной функционал

1. Страница каталога товаров:
   - Фильтр по бренду (выпадающий список)
   - Фильтр по цене (ползунок с динамическим диапазоном)
   - Добавление товаров в корзину
   - Отображение количества выбранных товаров
   - Кнопка "Выбрано: #" для перехода в корзину товаров (Неактивна, если товар не выбран)
2. Страница оформления заказа:
   - Возможность управления количеством выбранного товара
   - Возможность удаления выбранного товара из корзины
   - Вывод итоговой суммы с возможностью изменения согласно выбранному количеству
   - Если были удалены все товары из заказа, то появляется сообщение об отсутствии товаров в заказе и кнопка возврата к каталогу товаров
3. Страница оплаты:
   - Возможность внесения доступного номинала монет для оплаты заказа
   - Вывод суммы внесенных монет
   - Кнопка оплаты заказа (остается неактивной, если суммы внесенных монет недостаточно для оплаты заказа)
4. Страница благодарности
   - Вывод сообщения благодарности за покупку
   - Вывод возможной сдачи, если было внесено больше итоговой суммы, доступным номиналом монет (1, 2, 5, 10)
   - Кнопка возврата к каталогу товаров

## Структура проекта

SodaVending/
├── SodaVending.Api/         # Backend ASP.NET Core
│   ├── Controllers/         # API контроллеры
│   ├── Models/              # Модели данных
│   ├── Data/                # DbContext и конфигурация БД
│   ├── Repositories/        # Репозитории
│   ├── Services/            # Сервисы бизнес-логики
│   └── DTOs/                # Объекты для передачи данных
│
└── SodaVending.Client/      # Frontend Next.js
    ├── public/              # Статические файлы
    ├── src/
    │   ├── app/             # Next.js App Router
    │   ├── components/      # React компоненты
    │   ├── store/           # Redux store и slices
    │   ├── services/        # API сервисы
    │   └── types/           # TypeScript типы
                  

## Инструкция по запуску

### Предварительные требования
- .NET 8.0 SDK
- Node.js 18+ и npm
- MS SQL Server Express (или LocalDB)

### Backend
Git Bash (если установлен):
1. Перейдите в папку "SodaVending.Api"
2. В контекстном меню выберите "Open Git Bash here"
2. Выполните команды:

   1) dotnet restore
   2) dotnet build
   3) dotnet run

IDE Visual Studio:
1. Перейдите в папку VendingMachineProject
2. Запустите решение SodaVending.sln
3. Запустите проект

 API будет доступен по адресу: http://localhost:5000

### Frontend
Git Bash:
1. Перейдите в папку "SodaVending.Client"
2. В контекстном меню выберите "Open Git Bash here"
3. Выполните команды:

   1) npm install
   2) npm run dev

Visual Studio Code:
1. Запустите Visual Studio Code
2. Во вкладке "File (Файл)" выберите "Open Folder (Открыть папку)"
3. Найдите и выберите "SodaVending.Client"
4. В терминале (Terminal -> New Terminal) введите команды:
   1) npm install
   2) npm run dev

 Приложение будет доступно по адресу: http://localhost:3000

## База данных

При первом запуске база данных создается автоматически с начальными данными:
- 4 бренда напитков
- 8 продуктов с различными ценами и количеством (при выборе товара и его успешной оплаты количество в БД уменьшается)
- 4 типа монет: 1₽, 2₽, 5₽, 10₽ (по 100 штук каждого номинала)


## Дополнительные возможности

- Валидация данных на клиенте и сервере
- Сохранение состояния корзины между перезагрузками страницы (в Redux)
- Алгоритм расчета оптимальной сдачи
- Проверка доступности сдачи перед оплатой
